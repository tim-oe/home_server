# https://hub.docker.com/_/nginx
# https://github.com/linuxserver/docker-nginx
# TODO https://github.com/NginxProxyManager/nginx-proxy-manager
# TODO add backup of certbot volumes
# verify cert access
# docker exec nginx ls -la /etc/letsencrypt/live/tecronin.uk/
---
services:
  nginx:
    image: "nginx:stable-alpine-slim"
    container_name: "nginx"
    hostname: "nginx"
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot_etc:/etc/letsencrypt:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.conf.d:/etc/nginx/conf.d
      # https://sunscrapers.com/blog/setting-up-https-on-nginx-with-certbot-and-letsencrypt/	  
      - ./ssl-dhparams.pem:/ssl-dhparams.pem
      - ./log:/var/log/nginx
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    # https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # https://hub.docker.com/r/certbot/dns-cloudflare
  # check certs
  # docker exec nginx-certbot certbot certificates
  # check logs
  # docker logs -f nginx-certbot
  # dry run renewal
  # docker exec nginx-certbot certbot renew --dry-run --dns-cloudflare --dns-cloudflare-credentials /cloudflare.ini
  certbot:
    image: certbot/dns-cloudflare
    container_name: "nginx-certbot"
    restart: "unless-stopped"
    volumes:
      - certbot_etc:/etc/letsencrypt
      - certbot_lib:/var/lib/letsencrypt
      - ./cloudflare.ini:/cloudflare.ini
      - ./certbot-manager.sh:/certbot-manager.sh:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    entrypoint: ["/bin/sh", "/certbot-manager.sh"]

volumes:
  certbot_etc:
    name: certbot_etc
  certbot_lib:
    name: certbot_lib

networks:
  default:
    external: true
    name: "share-net"