# https://www.nginx.com/resources/wiki/start/topics/examples/full/
events {
}

http {
  # https://stackoverflow.com/questions/35744650/docker-network-nginx-resolver
  resolver 127.0.0.11;

  # https://futurestud.io/tutorials/nginx-how-to-fix-unknown-connection_upgrade-variable
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 80;
    server_name jenkins.localdomain;
    # https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/
    location / {
      sendfile off;
      proxy_pass http://jenkins:8080;
      proxy_redirect default;
      proxy_http_version 1.1;

      # Required for Jenkins websocket agents
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Upgrade $http_upgrade;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_max_temp_file_size 0;

      #this is the maximum upload size
      client_max_body_size 10m;
      client_body_buffer_size 128k;

      proxy_connect_timeout 90;
      proxy_send_timeout 90;
      proxy_read_timeout 90;
      proxy_buffering off;
      proxy_request_buffering off; # Required for HTTP CLI commands
      proxy_set_header Connection ""; # Clear for keepalive
    }
  }

  server {
    listen 80;
    server_name tec-nexus.localdomain;
    location / {
      proxy_pass http://nexus:8081;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  server {
    listen 80;
    server_name openhab.localdomain;
    location / {
      proxy_pass http://openhab:8881;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  server {
    listen 80;
    server_name sonarqube.localdomain;
    location / {
      proxy_pass http://sonarqube:9000;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  server {
    listen 80;
    server_name grafana.localdomain;
    location / {
      proxy_pass http://grafana:3000;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  server {
    listen 80;
    server_name influxdb.localdomain;
    location / {
      proxy_pass http://influxdb:8086;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  # send it all to https
  server {  
    listen  80;
    server_name weather.tecronin.uk;
     location / {
          return 301 https://$host$request_uri;
      }
  }

  server {
    listen 443 ssl;
    
    ssl_certificate /etc/letsencrypt/live/tecronin.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tecronin.uk/privkey.pem;

    server_name weather.tecronin.uk;
    location / {
      proxy_pass http://tec-weather.localdomain:8000;
      rewrite ^/(.*)$ /$1 break;
    }
  }

  # TODO not working as unifi requires https...
  # server {
  #   listen 443 ssl;
  #   ssl_certificate /ssl/unifi/cert.pem;
  #   ssl_certificate_key /ssl/unifi/privkey.pem;

  #   server_name unifi.localdomain;
  #   location / {
  #     proxy_pass http://unifi.localdomain:8883;
  #     rewrite ^/(.*)$ /$1 break;
  #   }
  # }

  server {
    listen 443 ssl;
    ssl_certificate /ssl/vaultwarden/cert.pem;
    ssl_certificate_key /ssl/vaultwarden/privkey.pem;

    server_name vaultwarden.localdomain;
    location / {
      proxy_pass http://vaultwarden:8860;
      rewrite ^/(.*)$ /$1 break;
    }
  }

}
